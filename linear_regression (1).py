# -*- coding: utf-8 -*-
"""linear_regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iDWn96F-axM7yKPPsJoyaDicqHKpjFkX

# **GRIP Task**

# **Prediction using Supervised ML**

**Predict the percentage of an student based on the no. of study hours.**

**Importing Libraries**
"""

import numpy as np
import pandas as pd
import tensorflow as tf
import matplotlib.pyplot as plt

"""**Import the DataSet**"""

df=pd.read_csv('http://bit.ly/w-data')

df

df.describe()

"""Checking for null values in the dataset"""

df.isnull().sum()

"""**Seperate Features and Labels**"""

X=df.iloc[:,:-1].values
Y=df.iloc[:,1].values

#Features
X

#Labels
Y

"""**Visualise the data**"""

plt.xlabel('Hours')
plt.ylabel('scores')
plt.title('Scores vs Hours')
plt.scatter(X,Y)

"""**Splitting The Data Set**

We are splitting the data set in training and test set.
"""

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.2,random_state=0)

"""**Importing linear Regression Model using sklearn library.**"""

from sklearn.linear_model import LinearRegression
model=LinearRegression()

"""**Fit the Model**"""

model.fit(x_train,y_train)

"""**regression line**"""

line=model.coef_*X+model.intercept_
plt.scatter(X,Y)
plt.xlabel("Hours")
plt.ylabel("Scores")
plt.plot(X,line,color="red")
plt.show()

"""**Predict The Values**"""

y_pred=model.predict(x_test)
print("The predicted values for the test set is",y_pred)

"""**Actual vs Predicted Values**"""

dataframe=pd.DataFrame({"Actual":y_test,"Predicted":y_pred})
print(dataframe)

"""**Evaluating the Model** """

from sklearn import metrics
print("Mean absolute Error",metrics.mean_absolute_error(y_test,predicted))
print("Mean squared Error",metrics.mean_squared_error(y_test,predicted))
print("Max Error",metrics.max_error(y_test,predicted))

"""**Predict the score when a student studies 9.35 hours a day**"""

hours=9.35
y_pred=model.predict([[hours]])
print('The predicted score will be '+" ".join(map(str,y_pred)))



